# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: pdf2image

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: java8
  region: ap-northeast-2
  role: s3TriggerRole

custom:
  bucket: pdf-image

# you can add packaging information here
package:
  artifact: build/distributions/hello.zip

functions:
  convertPdfToImg:
    handler: com.serverless.Handler
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: books/ebooks/
            - suffix: .pdf

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    s3TriggerRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: S3TriggerRole # required if you want to use 'serverless deploy --function' later on
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          # - PolicyName: root
          #   PolicyDocument:
          #     Version: '2012-10-17'
          #     Statement:
          #       - Effect: Allow
          #         Action:
          #           - logs:CreateLogGroup
          #           - logs:CreateLogStream
          #           - logs:PutLogEvents
          #         Resource: arn:aws:logs:*:*:*
          - PolicyName: forLambdaInvoke
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: "Allow"
                  Action:
                    - "lambda:*"
                    # - lambda:InvokeFunction
                    # - lambda:InvokeAsync
                  Resource: "*"
          - PolicyName: forS3Trigger
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: "Allow"
                  Action:
                    - "s3:*"
                    # - lambda:InvokeFunction
                    # - lambda:InvokeAsync
                  Resource: "*"
                # - Effect: "Allow"
                #   Action:
                #     - "s3:ListBucekt"
                #   Resource: arn:aws:s3:::${self:custom.bucket}
                # - Effect: "Allow"
                #   Action:
                #     - "s3:PutObject"
                #     - "s3:GetObject"
                #     - "s3:ListObject"
                #   Resource: arn:aws:s3:::${self:custom.bucket}/*
